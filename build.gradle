allprojects {
    group = 'site.zido'
    version = '1.0.0-SNAPSHOT'
}
description = "Elise - 简单/强大/流畅的爬虫框架"

buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/gradle-plugin" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
}
ext {
    configuration = [
        javaVersion = JavaVersion.VERSION_1_8
    ]
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.deprecation = true
        options.compilerArgs += ["-parameters"]
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set("sources")
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier.set("javadoc")
    }

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                // groupId = project.group
                // artifactId = project.name
                // version = project.version
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = 'Elise-builder'
                    description = 'A Simple Spider Framework'
                    url = 'https://elise.zido.site'
                    licenses {
                        license {
                            name = 'The MIT License (MIT)'
                            url = 'https://raw.githubusercontent.com/zidoshare/Elise/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            name = 'zido'
                            email = 'wuhongxu1208@gmail.com'
                        }
                    }
                    scm {
                        url = 'https://github.com/zidoshare/Elise'
                        connection = 'scm:git:git://github.com/zidoshare/Elise.git'
                        developerConnection = 'scm:git:ssh://git@github.com:zidoshare/Elise.git'
                    }
                }
            }
        }
        repositories {
            maven {
                name "oss"
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    javadoc {
        description = "Generates project-level javadoc for use in -javadoc jar"

        options.memberLevel = JavadocMemberLevel.PROTECTED
        options.author = true
        options.version = true
        options.header = project.name
        options.addStringOption('Xdoclint:none', '-quiet')

        logging.captureStandardError LogLevel.INFO
        logging.captureStandardOutput LogLevel.INFO
        options.encoding = "UTF-8"
        options.charSet = 'UTF-8'
    }
}
